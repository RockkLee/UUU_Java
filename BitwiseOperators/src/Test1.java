//問題:
	//?_1. 為甚麼c=127
	//?_2. 看不懂劃位

public class Test1 {
	public static void main(String[] args) {
		//?_1. 為甚麼c=127
		System.out.println("=========================== part 1 =========================");
		
		byte b = 127;		
		System.out.println("b:"+b);//127
		byte c = b++;  //b=(byte)(b+1)
		System.out.println("c:"+c);//127
		System.out.println("b:"+b);//-128
		System.out.println("--b:" + (--b) );
		
		System.out.println("=========================== part 1 =========================\n\n");
		
		
		
		
		
		//二補數原理
		System.out.println("=========================== part 2 =========================");
		
		byte a = 7; 					// 0000_0111
		byte reverse_a = (byte) ~a;		// 1111_1000
		System.out.println(reverse_a); 					// -8 ， 因為------->二補數(鏡射)原理
		System.out.println((byte)reverse_a + (byte)1);	// -7 -->完成!!
		
		System.out.println("=========================== part 2 =========================\n\n");
		
		
		
		
		
		System.out.println("=========================== part 3 =========================");
		
		System.out.println(6&5);
		//0.....0000_0110
		//0.....0000_0101
		//----------------------------------------
		//0.....0000_0100 , print 4
		//
		System.out.println(6|5);
		//0.....0000_0110
		//0.....0000_0101
		//----------------------------------------
		//0.....0000_0111 , print 7
		//
		System.out.println(6^5);
		//0.....0000_0110
		//0.....0000_0101
		//----------------------------------------
		//0.....0000_0011 , print 3
		//
		
		System.out.println("=========================== part 3 =========================\n\n");
		
		
		
		
		
		System.out.println(5&(3<<3));
		//0.....00000101
		//0..00000011000
		//----------------------------------------------------		
		//0.....00000000 , print 0，表示有空位(&)

		System.out.println(5|(3<<3));
		//0.....00000101
		//0..00000011000
		//----------------------------------------		
		//0.....00011101 , print 29，劃位成功(|)

										//000000 0011000>>1
										//0..0000000000110
		System.out.println(136&(24>>2));//0.....00101000		 							 
										//----------------------------------------------------		
										//0.....00000000 , print 0，表示有空位(&)

										//000000 0011000>>1
										//0..00000000000110
		System.out.println(136|(24>>2));//0......00101000		
										//----------------------------------------		
		    							//0......01011100 , print 142，劃位成功(|)
	}
}
